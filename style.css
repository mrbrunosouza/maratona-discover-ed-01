/*Global =====================
Criada uma variável para reaproveitar em vários campos*/
:root {
    --dark-blue: color: #363f5f;
    --green: #49AA26;
    --light-green: #3dd705;
    --red: #e92929;
}

/*Usamos o ` * ` para definir que todos elementos da página terão esse estilo, como um estilo geral, caso não for aplicado nenhum outro estilo em outra tag*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    font-size: 93.75%;
}

/*Usar o nome da tag para estilizar todas as tags com esse mesmo nome no HTML*/
body {
    background: #f0f2f5;
    font-family: 'Poppins', sans-serif;
}

/* css tricks - site para truques css
fizemos esse truque para esconder a box/text da tela mas não deixando que o leitor de tela não leia ele */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}

/*Usar ` .nomeDaClasse ` para estilizar somente as classes com esse nome*/
.container {
    width: min(90vw, 800px);
    margin: auto;
}

/*Titles =======================*/

h2 {
    margin-top: 3.2rem;
    margin-bottom: 0.8rem;
    color: var(--dark-blue);
    font-weight: normal;
}

/*Links & Buttons ===============*/

a {
    color: var(--green);
    text-decoration: none;
}

a:hover {
    color: var(--light-green);
}

.button.new {
    display: inline-block;
    margin-bottom: .8rem;
}

button {
    width: 100%;
    height: 50px;

    border: none;

    color: white;
    background: var(--green);

    padding: 0;

    border-radius: 0.25rem;
    cursor: pointer;
}

button:hover {
    background: var(--light-green);
}

.button.cancel {
    color: var(--red);
    border: 2px var(--red) solid;
    border-radius: 0.25rem;

    height: 50px;

    display: flex;
    align-items: center;
    justify-content: center;

    opacity: 0.6;
}

.button.cancel:hover {
    opacity: 1;
}

/*header =======================*/
header {
    background: #2D4A22;
    padding: 2rem 0 10rem;
    text-align: center;
}

/*Usar ` #nomeDoId ` para estilizar somente a tag com esse ID, lembrando que o ID deve ser único por página HTML, para não ter problemas no código*/
#logo {
    color: #fff;
    font-weight: 100;
}

/* Balance ================*/

#balance {
    margin-top: -8rem;
}

/*Usamos `#nomeDoId + nomeDaTag` para estilizar somente as tags com esse nome dentro do grupo do ID informado, não estilizando todos os componentes do ID e sim somente a tag informada, como abaixo, que estamos estilizando somente o h2 do Id = balance*/
#balance h2 {
    color: white;
    margin-top: 0;
}

/* Cards ================*/

.card {
    background: white;
    padding: 1.5rem 2rem;
    border-radius: 0.25rem;

    margin-bottom: 2rem;

    color: var(--dark-blue);
}

/*Combinação de `class + h3` para estilizar somente os h3 das classes `card`*/
.card h3 {
    font-weight: normal;
    font-size: 1rem;

    display: flex;
    align-items: center;
    justify-content: space-between;
}

.card p {
    font-size: 2rem;
    line-height: 3rem;
    white-space: nowrap;
    margin-top: 1rem;
}

/*No HTML foi criada uma class `card total`, sendo o `total` como um subtitulo para separar essa tag das outras tags `card`, então usamos no CSS ` .nomeDaClasse.nomeSegundaClasse`*/
.card.total {
    background: var(--green);
    color: white;
}

/* Table ================*/

#transaction {
    display: block;
    width: 100%;
    overflow-x: auto;
}

#data-table {
    width: 100%;
    border-spacing: 0 0.5rem;
    color: #969CB3;
}

/*Usamos a combinação de tags ` table thead tr ` para identificar que será estilizado somente as ` tr ` dentro da ` table ` e dentro da ` thead `, e o ` th:first-child ` informamos que somente o primeiro filho (child) será estilizado. E então unificamos a ` table tbody tr ` para ter a mesma estilização, separando essas duas tags por uma vírgula */
table thead tr th:first-child, 
table tbody tr td:first-child {
    border-radius: 0.25rem 0 0 0.25rem;
}

table thead tr th:last-child, 
table tbody tr td:last-child {
    border-radius: 0 0.25rem 0.25rem 0;
}

table th {
    background: white;
    font-weight: normal;
    padding: 1rem 2rem;
    text-align: left;
}

table tbody tr {
    opacity: 0.7;
}

/*` nomeDaTag:hover ` é usada para quando passar o mouse em cima do componente esse campo será estilizado conforme abaixo.
` hover ` o sistema entende como, passar o mouse em cima do componente.
Se analisar o componente acima, foi definida uma opacidade de 0.7, e então ao passar o mouse em cima (hover) o sistema define a estilização desse campo para opacidade 1.*/
table tbody tr:hover {
    opacity: 1;
}

table td {
    background: white;
    padding: 1rem 2rem;
}

/*Usamos ` nomeDaTag.nomeDaClasse ` para estilizar somente os conteúdos que estiverem dentro dessa tag com o nome da classe informada, como abaixo. 
Estamos estilizando somente as ` td ` com a ` class ` de nome 'description'*/
td.description {
    color: #363f5f;
}

td.income {
    color: #12A454;
}

td.expense {
    color: #e92929;
}

/* Modal ================*/
.modal-overlay {
    width: 100%;
    height: 100%;

    background-color: rgba(0,0,0,0.7);

    position: fixed;
    top: 0;

    display: flex;
    align-items: center;
    justify-content: center;

    opacity: 0;
    visibility: hidden;

    z-index: 999;
}

.modal-overlay.active {
    opacity: 1;
    visibility: visible;
}

.modal {
    background: #f0f2f5;
    padding: 2.4rem;

    position: relative;
    z-index: 1;
}

/* Form ================*/

#form {
    max-width: 500px;
}

#form h2 {
    margin-top: 0;
}

input {
    border: none;
    border-radius: 0.2rem;

    padding: 0.8rem;

    width: 100%;
}

.input-group {
    margin-top: 0.8rem;
}

.input-group small {
    opacity: 0.4;
}

.input-group.actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.input-group.actions .button,
.input-group.actions button {
    width: 48%;
}

/* Footer ================*/

footer {
    text-align: center;
    padding: 4rem 0 2rem;
    color: var(--dark-blue);
    opacity: 0.6;
}

/* Responsive ================*/
@media (min-width: 800px) {
    html {
        font-size: 87.5%; /*14px*/
    }

    #balance {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 2rem;
    }

}
